/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package covidtrackingdemo.Boundary;

import covidtrackingdemo.Controller.HealthStaff.UpdateVacStatusCtrler;
import covidtrackingdemo.Controller.HealthStaff.UpdateInfStatusCtrler;
import covidtrackingdemo.Controller.HealthStaff.DisplayController;
import covidtrackingdemo.Controller.HealthStaff.SendInfAlertCtrler;
import covidtrackingdemo.Controller.HealthStaff.SendVacAlertCtrler;
import covidtrackingdemo.Entity.PublicUser;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author barry
 */
public class HealthStaffPage extends javax.swing.JFrame {
            
    public HealthStaffPage() throws IOException {
        initComponents();
        setExtendedState(MAXIMIZED_BOTH);
        display(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        hsUsername = new javax.swing.JTextField();
        puUsername = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        infectionDate = new com.toedter.calendar.JDateChooser();
        vaccinationDate = new com.toedter.calendar.JDateChooser();
        iStatsYesBtn = new javax.swing.JRadioButton();
        iStatsNoBtn = new javax.swing.JRadioButton();
        vStatsYesBtn = new javax.swing.JRadioButton();
        vStatsNoBtn = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        updateBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMinimumSize(new java.awt.Dimension(127, 400));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(0, 204, 102));
        jPanel1.setPreferredSize(new java.awt.Dimension(120, 120));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("HEALTH STAFF");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel7.setPreferredSize(new java.awt.Dimension(127, 48));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setPreferredSize(new java.awt.Dimension(312, 200));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Health Staff Username");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 15);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Public User Username");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 15);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Vaccination Status");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 15);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Vaccination Date");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 15);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel6.setText("Infection Status");
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 15);
        jPanel2.add(jLabel6, gridBagConstraints);

        hsUsername.setPreferredSize(new java.awt.Dimension(100, 30));
        hsUsername.setEditable(false);
        hsUsername.setBackground(new Color(224,224,224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(hsUsername, gridBagConstraints);

        puUsername.setPreferredSize(new java.awt.Dimension(100, 30));
        puUsername.setEditable(false);
        puUsername.setBackground(new Color(224,224,224));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(puUsername, gridBagConstraints);

        jLabel5.setText("Infection Date");
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 15);
        jPanel2.add(jLabel5, gridBagConstraints);

        infectionDate.setDateFormatString("dd/MM/yyyy");
        infectionDate.setEnabled(false);
        infectionDate.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(infectionDate, gridBagConstraints);

        vaccinationDate.setDateFormatString("dd/MM/yyyy");
        vaccinationDate.setEnabled(false);
        vaccinationDate.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(vaccinationDate, gridBagConstraints);

        buttonGroup1.add(iStatsYesBtn);
        iStatsYesBtn.setText("Yes");
        iStatsYesBtn.setPreferredSize(new java.awt.Dimension(50, 30));
        iStatsYesBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                iStatsYesBtnItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(iStatsYesBtn, gridBagConstraints);

        buttonGroup1.add(iStatsNoBtn);
        iStatsNoBtn.setSelected(true);
        iStatsNoBtn.setText("No");
        iStatsNoBtn.setPreferredSize(new java.awt.Dimension(50, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(iStatsNoBtn, gridBagConstraints);

        buttonGroup2.add(vStatsYesBtn);
        vStatsYesBtn.setText("Yes");
        vStatsYesBtn.setPreferredSize(new java.awt.Dimension(50, 30));
        vStatsYesBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                vStatsYesBtnItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(vStatsYesBtn, gridBagConstraints);

        buttonGroup2.add(vStatsNoBtn);
        vStatsNoBtn.setSelected(true);
        vStatsNoBtn.setText("No");
        vStatsNoBtn.setPreferredSize(new java.awt.Dimension(50, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel2.add(vStatsNoBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 0, 15);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setPreferredSize(new java.awt.Dimension(472, 264));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "VaccinatedBy", "VaccinationStatus", "VaccinationDate", "DeterminedBy", "InfectionStatus", "InfectionDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        getContentPane().add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        updateBtn.setText("UPDATE");
        updateBtn.setPreferredSize(new java.awt.Dimension(98, 23));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 0);
        jPanel4.add(updateBtn, gridBagConstraints);

        logoutBtn.setText("LOGOUT");
        logoutBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logoutBtn.setPreferredSize(new java.awt.Dimension(252, 23));
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 0);
        jPanel4.add(logoutBtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 0, 15);
        getContentPane().add(jPanel4, gridBagConstraints);

        jButton1.setText("SEND EXPOSURE ALERTS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jButton1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void update(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update
        
        int i = jTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();

        // Convert Vaccination/ Infection String to String (Y/N)
        String vacStats;
        String infStats;

        if (vStatsYesBtn.isSelected()) {
            vacStats = "Y";
        }
        
        else {
            vacStats = "N"; 
        }
        
        if (iStatsYesBtn.isSelected()) {
            infStats = "Y";
        }
        
        else {
            infStats = "N"; 
        }

        // Convert Vaccination/ Infection Date to String Type
        
        String recordVDate = model.getValueAt(i,3).toString();
        String recordIDate = model.getValueAt(i,6).toString();

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String fieldVDate = dateFormat.format(vaccinationDate.getDate());
        String fieldIDate = dateFormat.format(vaccinationDate.getDate());
        
        // If Vaccination Date is Updated

        if (!recordVDate.equals(fieldVDate)) {
            
            int confirmationNumber = JOptionPane.showConfirmDialog(this ,"Infection Vaccination Alert will be sent upon update. Proceed?", "",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

            // If User agrees to Update Vac with Send Alert
            
            if (confirmationNumber == 0) {
                
                UpdateVacStatusCtrler uvc = new UpdateVacStatusCtrler();

                SendVacAlertCtrler svc = new SendVacAlertCtrler();
                
                try {
                    
                    int validationNumber = uvc.update(hsUsername.getText(), puUsername.getText(),
                            vacStats, vaccinationDate.getDate(), infStats, infectionDate.getDate());

                    if (validationNumber == 0) {

                        svc.sendVacAlert(puUsername.getText(), "vaccination", vaccinationDate.getDate());
                        
                        model.setRowCount(0);

                        display();
                    }
                    
                    else {
                        
                        JOptionPane.showMessageDialog(null, "Please enter a new and valid vaccination date");   
                    }
                } 
                catch (IOException ex) {
                    
                    Logger.getLogger(HealthStaffPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        // Else-If Infection Date is Updated

        else if (!recordIDate.equals(fieldIDate)) {
            
            int confirmationNumber = JOptionPane.showConfirmDialog(this ,"Infection Notification Alert will be sent upon update. Proceed?", "",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

            // If User agrees to Update Inf with Send Alert
            
            if (confirmationNumber == 0) {
                            
                UpdateInfStatusCtrler uic = new UpdateInfStatusCtrler();
                
                SendInfAlertCtrler sic = new SendInfAlertCtrler();

                try {
                    
                    int validationNumber = uic.update(hsUsername.getText(), puUsername.getText(), 
                        vacStats, vaccinationDate.getDate(), infStats, infectionDate.getDate());

                    if (validationNumber == 0) {

                        sic.sendInfAlert(puUsername.getText(), "infection", infectionDate.getDate());

                        model.setRowCount(0);

                        display();
                    }
                    
                    else {
                        
                        JOptionPane.showMessageDialog(null, "Please enter a new and valid infection date");   
                    }
                } 
                catch (IOException ex) {
                    
                    Logger.getLogger(HealthStaffPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_update

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked

        int i = jTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();

        // Populate PU Username
      
        puUsername.setText(model.getValueAt(i, 0).toString());

        // Populate Vaccine Status
        
        String vStats = model.getValueAt(i,2).toString();
        
        switch(vStats) {

            case "Y" -> {
                vStatsYesBtn.setSelected(true);
                vStatsNoBtn.setSelected(false);
//                vaccinationDate.setEnabled(true);

            }  
            case "N" -> {
                vStatsYesBtn.setSelected(false);
                vStatsNoBtn.setSelected(true);
                vaccinationDate.setEnabled(false);
            }
        }
        
        // Populate Vaccine Date
        
        String vaccinationDateValue = model.getValueAt(i,3).toString();

        try {
            java.util.Date date = new SimpleDateFormat("dd/MM/yyyy").parse(vaccinationDateValue);            
            vaccinationDate.setDate(date); 
        } 
        
        catch (ParseException ex) {
            Logger.getLogger(HealthStaffPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Populate Infection Status
        
        String iStats = model.getValueAt(i,5).toString();
        
        switch(iStats) {

            case "Y" -> {
                iStatsYesBtn.setSelected(true);
                iStatsNoBtn.setSelected(false);
//                infectionDate.setEnabled(true);
            }  
            case "N" -> {
                iStatsYesBtn.setSelected(false);
                iStatsNoBtn.setSelected(true);
                infectionDate.setEnabled(false);
            }
        }
        
        // Populate Infection Date
        
        String infectionDateValue = model.getValueAt(i,6).toString();
        
        try {
            java.util.Date date = new SimpleDateFormat("dd/MM/yyyy").parse(infectionDateValue);            
            infectionDate.setDate(date); 
        } 
        
        catch (ParseException ex) {
            Logger.getLogger(HealthStaffPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableMouseClicked

    private void logout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout
        // TODO add your handling code here:
        dispose();
        
        LoginPage lp = new LoginPage();
        lp.setVisible(true);
    }//GEN-LAST:event_logout

    private void vStatsYesBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_vStatsYesBtnItemStateChanged

        // Enable Vaccination-Date
        int state = evt.getStateChange();
        
        if (state == ItemEvent.SELECTED) {           
            
            vaccinationDate.setEnabled(true); 
            
            iStatsYesBtn.setEnabled(false);
            iStatsNoBtn.setEnabled(false);
        } 
        
        // Disable Vaccination-Date 
        else {
            
            vaccinationDate.setEnabled(false);
            
            iStatsYesBtn.setEnabled(true);
            iStatsNoBtn.setEnabled(true);

            try {
                java.util.Date date = new SimpleDateFormat("dd/MM/yyyy").parse("01/01/0001");
                vaccinationDate.setDate(date);  
            } 
            catch (ParseException ex) {
                Logger.getLogger(HealthStaffPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_vStatsYesBtnItemStateChanged

    private void iStatsYesBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_iStatsYesBtnItemStateChanged

        // Enable Infection-Date
        int state = evt.getStateChange();
        
        if (state == ItemEvent.SELECTED) {    
            
            infectionDate.setEnabled(true); 
            
            vStatsYesBtn.setEnabled(false);
            vStatsNoBtn.setEnabled(false);

        } 
        
        // Disable Infection-Date
        else if (state == ItemEvent.DESELECTED) {
            
            infectionDate.setEnabled(false);
            
            vStatsYesBtn.setEnabled(true);
            vStatsNoBtn.setEnabled(true);

            
            try {
                java.util.Date date = new SimpleDateFormat("dd/MM/yyyy").parse("01/01/0001");
                infectionDate.setDate(date);  
            } 
            catch (ParseException ex) {
                Logger.getLogger(HealthStaffPage.class.getName()).log(Level.SEVERE, null, ex);
            }        
        }
    }//GEN-LAST:event_iStatsYesBtnItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void display() throws IOException {

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        
        DisplayController dc = new DisplayController();
       
        ArrayList<PublicUser> userList = dc.display();
        
        Object rowData[] = new Object[7];
        
        for (PublicUser user : userList) {
                        
            rowData[0] = user.getUsername();
            rowData[1] = user.getVaccinatedBy();
            rowData[2] = user.getVaccinationStatus();
            rowData[3] = user.getVaccinationDate();
            rowData[4] = user.getDeterminedBy();
            rowData[5] = user.getInfectionStatus();
            rowData[6] = user.getInfectionDate();
            
            model.addRow(rowData);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AdminPage().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField hsUsername;
    private javax.swing.JRadioButton iStatsNoBtn;
    private javax.swing.JRadioButton iStatsYesBtn;
    private com.toedter.calendar.JDateChooser infectionDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JTextField puUsername;
    private javax.swing.JButton updateBtn;
    private javax.swing.JRadioButton vStatsNoBtn;
    private javax.swing.JRadioButton vStatsYesBtn;
    private com.toedter.calendar.JDateChooser vaccinationDate;
    // End of variables declaration//GEN-END:variables

    void setHsUsername(String username) {
        hsUsername.setText(username);
    }
}
